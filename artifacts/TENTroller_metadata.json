{
	"compiler": {
		"version": "0.5.16+commit.9c3226ce"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "string",
						"name": "action",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "pauseState",
						"type": "bool"
					}
				],
				"name": "ActionPaused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract TToken",
						"name": "tToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "action",
						"type": "string"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "pauseState",
						"type": "bool"
					}
				],
				"name": "ActionPaused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "contributor",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newSpeed",
						"type": "uint256"
					}
				],
				"name": "ContributorLendtSpeedUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "contract TToken",
						"name": "tToken",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lendtDelta",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lendtBorrowIndex",
						"type": "uint256"
					}
				],
				"name": "DistributedBorrowerLendt",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "contract TToken",
						"name": "tToken",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "supplier",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lendtDelta",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "lendtSupplyIndex",
						"type": "uint256"
					}
				],
				"name": "DistributedSupplierLendt",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "error",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "info",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "detail",
						"type": "uint256"
					}
				],
				"name": "Failure",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "LendtGranted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "contract TToken",
						"name": "tToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newSpeed",
						"type": "uint256"
					}
				],
				"name": "LendtSpeedUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract TToken",
						"name": "tToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "MarketEntered",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract TToken",
						"name": "tToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "MarketExited",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract TToken",
						"name": "tToken",
						"type": "address"
					}
				],
				"name": "MarketListed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "contract TToken",
						"name": "tToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newBorrowCap",
						"type": "uint256"
					}
				],
				"name": "NewBorrowCap",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "oldBorrowCapGuardian",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newBorrowCapGuardian",
						"type": "address"
					}
				],
				"name": "NewBorrowCapGuardian",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldCloseFactorMantissa",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newCloseFactorMantissa",
						"type": "uint256"
					}
				],
				"name": "NewCloseFactor",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract TToken",
						"name": "tToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldCollateralFactorMantissa",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newCollateralFactorMantissa",
						"type": "uint256"
					}
				],
				"name": "NewCollateralFactor",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldLiquidationIncentiveMantissa",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newLiquidationIncentiveMantissa",
						"type": "uint256"
					}
				],
				"name": "NewLiquidationIncentive",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "oldPauseGuardian",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newPauseGuardian",
						"type": "address"
					}
				],
				"name": "NewPauseGuardian",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "contract PriceOracle",
						"name": "oldPriceOracle",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "contract PriceOracle",
						"name": "newPriceOracle",
						"type": "address"
					}
				],
				"name": "NewPriceOracle",
				"type": "event"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "Implementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract Unitroller",
						"name": "unitroller",
						"type": "address"
					}
				],
				"name": "_become",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "_borrowGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "_grantLendt",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "_mintGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "newBorrowCapGuardian",
						"type": "address"
					}
				],
				"name": "_setBorrowCapGuardian",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract TToken",
						"name": "tToken",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "state",
						"type": "bool"
					}
				],
				"name": "_setBorrowPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newCloseFactorMantissa",
						"type": "uint256"
					}
				],
				"name": "_setCloseFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract TToken",
						"name": "tToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "newCollateralFactorMantissa",
						"type": "uint256"
					}
				],
				"name": "_setCollateralFactor",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "contributor",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "lendtSpeed",
						"type": "uint256"
					}
				],
				"name": "_setContributorLendtSpeed",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract TToken",
						"name": "tToken",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "lendtSpeed",
						"type": "uint256"
					}
				],
				"name": "_setLendtSpeed",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newLiquidationIncentiveMantissa",
						"type": "uint256"
					}
				],
				"name": "_setLiquidationIncentive",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract TToken[]",
						"name": "tTokens",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "newBorrowCaps",
						"type": "uint256[]"
					}
				],
				"name": "_setMarketBorrowCaps",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract TToken",
						"name": "tToken",
						"type": "address"
					},
					{
						"internalType": "bool",
						"name": "state",
						"type": "bool"
					}
				],
				"name": "_setMintPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "newPauseGuardian",
						"type": "address"
					}
				],
				"name": "_setPauseGuardian",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract PriceOracle",
						"name": "newOracle",
						"type": "address"
					}
				],
				"name": "_setPriceOracle",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "bool",
						"name": "state",
						"type": "bool"
					}
				],
				"name": "_setSeizePaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "bool",
						"name": "state",
						"type": "bool"
					}
				],
				"name": "_setTransferPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "contract TToken",
						"name": "tToken",
						"type": "address"
					}
				],
				"name": "_supportMarket",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "accountAssets",
				"outputs": [
					{
						"internalType": "contract TToken",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "admin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "allMarkets",
				"outputs": [
					{
						"internalType": "contract TToken",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "tToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "borrowAmount",
						"type": "uint256"
					}
				],
				"name": "borrowAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "borrowCapGuardian",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "borrowCaps",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "borrowGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "tToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "borrowAmount",
						"type": "uint256"
					}
				],
				"name": "borrowVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "contract TToken",
						"name": "tToken",
						"type": "address"
					}
				],
				"name": "checkMembership",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address[]",
						"name": "holders",
						"type": "address[]"
					},
					{
						"internalType": "contract TToken[]",
						"name": "tTokens",
						"type": "address[]"
					},
					{
						"internalType": "bool",
						"name": "borrowers",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "suppliers",
						"type": "bool"
					}
				],
				"name": "claimLendt",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "holder",
						"type": "address"
					}
				],
				"name": "claimLendt",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "holder",
						"type": "address"
					},
					{
						"internalType": "contract TToken[]",
						"name": "tTokens",
						"type": "address[]"
					}
				],
				"name": "claimLendt",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "closeFactorMantissa",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address[]",
						"name": "tTokens",
						"type": "address[]"
					}
				],
				"name": "enterMarkets",
				"outputs": [
					{
						"internalType": "uint256[]",
						"name": "",
						"type": "uint256[]"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "tTokenAddress",
						"type": "address"
					}
				],
				"name": "exitMarket",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "getAccountLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getAllMarkets",
				"outputs": [
					{
						"internalType": "contract TToken[]",
						"name": "",
						"type": "address[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "getAssetsIn",
				"outputs": [
					{
						"internalType": "contract TToken[]",
						"name": "",
						"type": "address[]"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getBlockNumber",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tTokenModify",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "redeemTokens",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "borrowAmount",
						"type": "uint256"
					}
				],
				"name": "getHypotheticalAccountLiquidity",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "getLendtAddress",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "contract TToken",
						"name": "tToken",
						"type": "address"
					}
				],
				"name": "isDeprecated",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "isTENTroller",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "lastContributorBlock",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "lendtAccrued",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "lendtBorrowState",
				"outputs": [
					{
						"internalType": "uint224",
						"name": "index",
						"type": "uint224"
					},
					{
						"internalType": "uint32",
						"name": "block",
						"type": "uint32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "lendtBorrowerIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "lendtContributorSpeeds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "lendtInitialIndex",
				"outputs": [
					{
						"internalType": "uint224",
						"name": "",
						"type": "uint224"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "lendtRate",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "lendtSpeeds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "lendtSupplierIndex",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "lendtSupplyState",
				"outputs": [
					{
						"internalType": "uint224",
						"name": "index",
						"type": "uint224"
					},
					{
						"internalType": "uint32",
						"name": "block",
						"type": "uint32"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "tTokenBorrowed",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tTokenCollateral",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "liquidator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "repayAmount",
						"type": "uint256"
					}
				],
				"name": "liquidateBorrowAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "tTokenBorrowed",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tTokenCollateral",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "liquidator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "actualRepayAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "seizeTokens",
						"type": "uint256"
					}
				],
				"name": "liquidateBorrowVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "tTokenBorrowed",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tTokenCollateral",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "actualRepayAmount",
						"type": "uint256"
					}
				],
				"name": "liquidateCalculateSeizeTokens",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "liquidationIncentiveMantissa",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "markets",
				"outputs": [
					{
						"internalType": "bool",
						"name": "isListed",
						"type": "bool"
					},
					{
						"internalType": "uint256",
						"name": "collateralFactorMantissa",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "isLendted",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "maxAssets",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "tToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "minter",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "mintAmount",
						"type": "uint256"
					}
				],
				"name": "mintAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "mintGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "tToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "minter",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "actualMintAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "mintTokens",
						"type": "uint256"
					}
				],
				"name": "mintVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "oracle",
				"outputs": [
					{
						"internalType": "contract PriceOracle",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "pauseGuardian",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "pendingAdmin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "pendingTENTrollerImplementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "tToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "redeemer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "redeemTokens",
						"type": "uint256"
					}
				],
				"name": "redeemAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "tToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "redeemer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "redeemAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "redeemTokens",
						"type": "uint256"
					}
				],
				"name": "redeemVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "tToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "payer",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "repayAmount",
						"type": "uint256"
					}
				],
				"name": "repayBorrowAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "tToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "payer",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "actualRepayAmount",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "borrowerIndex",
						"type": "uint256"
					}
				],
				"name": "repayBorrowVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "tTokenCollateral",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tTokenBorrowed",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "liquidator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "seizeTokens",
						"type": "uint256"
					}
				],
				"name": "seizeAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "seizeGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "tTokenCollateral",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "tTokenBorrowed",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "liquidator",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "borrower",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "seizeTokens",
						"type": "uint256"
					}
				],
				"name": "seizeVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "tToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "src",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "dst",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "transferTokens",
						"type": "uint256"
					}
				],
				"name": "transferAllowed",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "transferGuardianPaused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "tToken",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "src",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "dst",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "transferTokens",
						"type": "uint256"
					}
				],
				"name": "transferVerify",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"internalType": "address",
						"name": "contributor",
						"type": "address"
					}
				],
				"name": "updateContributorRewards",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "TENLend",
			"methods": {
				"_grantLendt(address,uint256)": {
					"details": "Note: If there is not enough LENDt, we do not perform the transfer all.",
					"params": {
						"amount": "The amount of LENDt to (possibly) transfer",
						"recipient": "The address of the recipient to transfer LENDt to"
					}
				},
				"_setBorrowCapGuardian(address)": {
					"params": {
						"newBorrowCapGuardian": "The address of the new Borrow Cap Guardian"
					}
				},
				"_setCloseFactor(uint256)": {
					"details": "Admin function to set closeFactor",
					"params": {
						"newCloseFactorMantissa": "New close factor, scaled by 1e18"
					},
					"return": "uint 0=success, otherwise a failure"
				},
				"_setCollateralFactor(address,uint256)": {
					"details": "Admin function to set per-market collateralFactor",
					"params": {
						"newCollateralFactorMantissa": "The new collateral factor, scaled by 1e18",
						"tToken": "The market to set the factor on"
					},
					"return": "uint 0=success, otherwise a failure. (See ErrorReporter for details)"
				},
				"_setContributorLendtSpeed(address,uint256)": {
					"params": {
						"contributor": "The contributor whose LENDt speed to update",
						"lendtSpeed": "New LENDt speed for contributor"
					}
				},
				"_setLendtSpeed(address,uint256)": {
					"params": {
						"lendtSpeed": "New LENDt speed for market",
						"tToken": "The market whose LENDt speed to update"
					}
				},
				"_setLiquidationIncentive(uint256)": {
					"details": "Admin function to set liquidationIncentive",
					"params": {
						"newLiquidationIncentiveMantissa": "New liquidationIncentive scaled by 1e18"
					},
					"return": "uint 0=success, otherwise a failure. (See ErrorReporter for details)"
				},
				"_setMarketBorrowCaps(address[],uint256[])": {
					"details": "Admin or borrowCapGuardian function to set the borrow caps. A borrow cap of 0 corresponds to unlimited borrowing.",
					"params": {
						"newBorrowCaps": "The new borrow cap values in underlying to be set. A value of 0 corresponds to unlimited borrowing.",
						"tTokens": "The addresses of the markets (tokens) to change the borrow caps for"
					}
				},
				"_setPauseGuardian(address)": {
					"params": {
						"newPauseGuardian": "The address of the new Pause Guardian"
					},
					"return": "uint 0=success, otherwise a failure. (See enum Error for details)"
				},
				"_setPriceOracle(address)": {
					"details": "Admin function to set a new price oracle",
					"return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
				},
				"_supportMarket(address)": {
					"details": "Admin function to set isListed and add support for the market",
					"params": {
						"tToken": "The address of the market (token) to list"
					},
					"return": "uint 0=success, otherwise a failure. (See enum Error for details)"
				},
				"borrowAllowed(address,address,uint256)": {
					"params": {
						"borrowAmount": "The amount of underlying the account would borrow",
						"borrower": "The account which would borrow the asset",
						"tToken": "The market to verify the borrow against"
					},
					"return": "0 if the borrow is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
				},
				"borrowVerify(address,address,uint256)": {
					"params": {
						"borrowAmount": "The amount of the underlying asset requested to borrow",
						"borrower": "The address borrowing the underlying",
						"tToken": "Asset whose underlying is being borrowed"
					}
				},
				"checkMembership(address,address)": {
					"params": {
						"account": "The address of the account to check",
						"tToken": "The tToken to check"
					},
					"return": "True if the account is in the asset, otherwise false."
				},
				"claimLendt(address)": {
					"params": {
						"holder": "The address to claim LENDt for"
					}
				},
				"claimLendt(address,address[])": {
					"params": {
						"holder": "The address to claim LENDt for",
						"tTokens": "The list of markets to claim LENDt in"
					}
				},
				"claimLendt(address[],address[],bool,bool)": {
					"params": {
						"borrowers": "Whether or not to claim LENDt earned by borrowing",
						"holders": "The addresses to claim LENDt for",
						"suppliers": "Whether or not to claim LENDt earned by supplying",
						"tTokens": "The list of markets to claim LENDt in"
					}
				},
				"enterMarkets(address[])": {
					"params": {
						"tTokens": "The list of addresses of the tToken markets to be enabled"
					},
					"return": "Success indicator for whether each corresponding market was entered"
				},
				"exitMarket(address)": {
					"details": "Sender must not have an outstanding borrow balance in the asset, or be providing necessary collateral for an outstanding borrow.",
					"params": {
						"tTokenAddress": "The address of the asset to be removed"
					},
					"return": "Whether or not the account successfully exited the market"
				},
				"getAccountLiquidity(address)": {
					"return": "(possible error code (semi-opaque), account liquidity in excess of collateral requirements,         account shortfall below collateral requirements)"
				},
				"getAllMarkets()": {
					"details": "The automatic getter may be used to access an individual market.",
					"return": "The list of market addresses"
				},
				"getAssetsIn(address)": {
					"params": {
						"account": "The address of the account to pull assets for"
					},
					"return": "A dynamic list with the assets the account has entered"
				},
				"getHypotheticalAccountLiquidity(address,address,uint256,uint256)": {
					"params": {
						"account": "The account to determine liquidity for",
						"borrowAmount": "The amount of underlying to hypothetically borrow",
						"redeemTokens": "The number of tokens to hypothetically redeem",
						"tTokenModify": "The market to hypothetically redeem/borrow in"
					},
					"return": "(possible error code (semi-opaque), hypothetical account liquidity in excess of collateral requirements,         hypothetical account shortfall below collateral requirements)"
				},
				"getLendtAddress()": {
					"return": "The address of LENDt"
				},
				"isDeprecated(address)": {
					"details": "All borrows in a deprecated tToken market can be immediately liquidated",
					"params": {
						"tToken": "The market to check if deprecated"
					}
				},
				"liquidateBorrowAllowed(address,address,address,address,uint256)": {
					"params": {
						"borrower": "The address of the borrower",
						"liquidator": "The address repaying the borrow and seizing the collateral",
						"repayAmount": "The amount of underlying being repaid",
						"tTokenBorrowed": "Asset which was borrowed by the borrower",
						"tTokenCollateral": "Asset which was used as collateral and will be seized"
					}
				},
				"liquidateBorrowVerify(address,address,address,address,uint256,uint256)": {
					"params": {
						"actualRepayAmount": "The amount of underlying being repaid",
						"borrower": "The address of the borrower",
						"liquidator": "The address repaying the borrow and seizing the collateral",
						"tTokenBorrowed": "Asset which was borrowed by the borrower",
						"tTokenCollateral": "Asset which was used as collateral and will be seized"
					}
				},
				"liquidateCalculateSeizeTokens(address,address,uint256)": {
					"details": "Used in liquidation (called in tToken.liquidateBorrowFresh)",
					"params": {
						"actualRepayAmount": "The amount of tTokenBorrowed underlying to convert into tTokenCollateral tokens",
						"tTokenBorrowed": "The address of the borrowed tToken",
						"tTokenCollateral": "The address of the collateral tToken"
					},
					"return": "(errorCode, number of tTokenCollateral tokens to be seized in a liquidation)"
				},
				"mintAllowed(address,address,uint256)": {
					"params": {
						"mintAmount": "The amount of underlying being supplied to the market in exchange for tokens",
						"minter": "The account which would get the minted tokens",
						"tToken": "The market to verify the mint against"
					},
					"return": "0 if the mint is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
				},
				"mintVerify(address,address,uint256,uint256)": {
					"params": {
						"actualMintAmount": "The amount of the underlying asset being minted",
						"mintTokens": "The number of tokens being minted",
						"minter": "The address minting the tokens",
						"tToken": "Asset being minted"
					}
				},
				"redeemAllowed(address,address,uint256)": {
					"params": {
						"redeemTokens": "The number of tTokens to exchange for the underlying asset in the market",
						"redeemer": "The account which would redeem the tokens",
						"tToken": "The market to verify the redeem against"
					},
					"return": "0 if the redeem is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
				},
				"redeemVerify(address,address,uint256,uint256)": {
					"params": {
						"redeemAmount": "The amount of the underlying asset being redeemed",
						"redeemTokens": "The number of tokens being redeemed",
						"redeemer": "The address redeeming the tokens",
						"tToken": "Asset being redeemed"
					}
				},
				"repayBorrowAllowed(address,address,address,uint256)": {
					"params": {
						"borrower": "The account which would borrowed the asset",
						"payer": "The account which would repay the asset",
						"repayAmount": "The amount of the underlying asset the account would repay",
						"tToken": "The market to verify the repay against"
					},
					"return": "0 if the repay is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
				},
				"repayBorrowVerify(address,address,address,uint256,uint256)": {
					"params": {
						"actualRepayAmount": "The amount of underlying being repaid",
						"borrower": "The address of the borrower",
						"payer": "The address repaying the borrow",
						"tToken": "Asset being repaid"
					}
				},
				"seizeAllowed(address,address,address,address,uint256)": {
					"params": {
						"borrower": "The address of the borrower",
						"liquidator": "The address repaying the borrow and seizing the collateral",
						"seizeTokens": "The number of collateral tokens to seize",
						"tTokenBorrowed": "Asset which was borrowed by the borrower",
						"tTokenCollateral": "Asset which was used as collateral and will be seized"
					}
				},
				"seizeVerify(address,address,address,address,uint256)": {
					"params": {
						"borrower": "The address of the borrower",
						"liquidator": "The address repaying the borrow and seizing the collateral",
						"seizeTokens": "The number of collateral tokens to seize",
						"tTokenBorrowed": "Asset which was borrowed by the borrower",
						"tTokenCollateral": "Asset which was used as collateral and will be seized"
					}
				},
				"transferAllowed(address,address,address,uint256)": {
					"params": {
						"dst": "The account which receives the tokens",
						"src": "The account which sources the tokens",
						"tToken": "The market to verify the transfer against",
						"transferTokens": "The number of tTokens to transfer"
					},
					"return": "0 if the transfer is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
				},
				"transferVerify(address,address,address,uint256)": {
					"params": {
						"dst": "The account which receives the tokens",
						"src": "The account which sources the tokens",
						"tToken": "Asset being transferred",
						"transferTokens": "The number of tTokens to transfer"
					}
				},
				"updateContributorRewards(address)": {
					"params": {
						"contributor": "The address to calculate contributor rewards for"
					}
				}
			},
			"title": "TENLend's TENTroller Contract"
		},
		"userdoc": {
			"methods": {
				"_grantLendt(address,uint256)": {
					"notice": "Transfer LENDt to the recipient"
				},
				"_setBorrowCapGuardian(address)": {
					"notice": "Admin function to change the Borrow Cap Guardian"
				},
				"_setCloseFactor(uint256)": {
					"notice": "Sets the closeFactor used when liquidating borrows"
				},
				"_setCollateralFactor(address,uint256)": {
					"notice": "Sets the collateralFactor for a market"
				},
				"_setContributorLendtSpeed(address,uint256)": {
					"notice": "Set LENDt speed for a single contributor"
				},
				"_setLendtSpeed(address,uint256)": {
					"notice": "Set LENDt speed for a single market"
				},
				"_setLiquidationIncentive(uint256)": {
					"notice": "Sets liquidationIncentive"
				},
				"_setMarketBorrowCaps(address[],uint256[])": {
					"notice": "Set the given borrow caps for the given tToken markets. Borrowing that brings total borrows to or above borrow cap will revert."
				},
				"_setPauseGuardian(address)": {
					"notice": "Admin function to change the Pause Guardian"
				},
				"_setPriceOracle(address)": {
					"notice": "Sets a new price oracle for the tentroller"
				},
				"_supportMarket(address)": {
					"notice": "Add the market to the markets mapping and set it as listed"
				},
				"borrowAllowed(address,address,uint256)": {
					"notice": "Checks if the account should be allowed to borrow the underlying asset of the given market"
				},
				"borrowVerify(address,address,uint256)": {
					"notice": "Validates borrow and reverts on rejection. May emit logs."
				},
				"checkMembership(address,address)": {
					"notice": "Returns whether the given account is entered in the given asset"
				},
				"claimLendt(address)": {
					"notice": "Claim all the lendt accrued by holder in all markets"
				},
				"claimLendt(address,address[])": {
					"notice": "Claim all the lendt accrued by holder in the specified markets"
				},
				"claimLendt(address[],address[],bool,bool)": {
					"notice": "Claim all lendt accrued by the holders"
				},
				"enterMarkets(address[])": {
					"notice": "Add assets to be included in account liquidity calculation"
				},
				"exitMarket(address)": {
					"notice": "Removes asset from sender's account liquidity calculation"
				},
				"getAccountLiquidity(address)": {
					"notice": "Determine the current account liquidity wrt collateral requirements"
				},
				"getAllMarkets()": {
					"notice": "Return all of the markets"
				},
				"getAssetsIn(address)": {
					"notice": "Returns the assets an account has entered"
				},
				"getHypotheticalAccountLiquidity(address,address,uint256,uint256)": {
					"notice": "Determine what the account liquidity would be if the given amounts were redeemed/borrowed"
				},
				"getLendtAddress()": {
					"notice": "Return the address of the LENDt token"
				},
				"isDeprecated(address)": {
					"notice": "Returns true if the given tToken market has been deprecated"
				},
				"liquidateBorrowAllowed(address,address,address,address,uint256)": {
					"notice": "Checks if the liquidation should be allowed to occur"
				},
				"liquidateBorrowVerify(address,address,address,address,uint256,uint256)": {
					"notice": "Validates liquidateBorrow and reverts on rejection. May emit logs."
				},
				"liquidateCalculateSeizeTokens(address,address,uint256)": {
					"notice": "Calculate number of tokens of collateral asset to seize given an underlying amount"
				},
				"mintAllowed(address,address,uint256)": {
					"notice": "Checks if the account should be allowed to mint tokens in the given market"
				},
				"mintVerify(address,address,uint256,uint256)": {
					"notice": "Validates mint and reverts on rejection. May emit logs."
				},
				"redeemAllowed(address,address,uint256)": {
					"notice": "Checks if the account should be allowed to redeem tokens in the given market"
				},
				"redeemVerify(address,address,uint256,uint256)": {
					"notice": "Validates redeem and reverts on rejection. May emit logs."
				},
				"repayBorrowAllowed(address,address,address,uint256)": {
					"notice": "Checks if the account should be allowed to repay a borrow in the given market"
				},
				"repayBorrowVerify(address,address,address,uint256,uint256)": {
					"notice": "Validates repayBorrow and reverts on rejection. May emit logs."
				},
				"seizeAllowed(address,address,address,address,uint256)": {
					"notice": "Checks if the seizing of assets should be allowed to occur"
				},
				"seizeVerify(address,address,address,address,uint256)": {
					"notice": "Validates seize and reverts on rejection. May emit logs."
				},
				"transferAllowed(address,address,address,uint256)": {
					"notice": "Checks if the account should be allowed to transfer tokens in the given market"
				},
				"transferVerify(address,address,address,uint256)": {
					"notice": "Validates transfer and reverts on rejection. May emit logs."
				},
				"updateContributorRewards(address)": {
					"notice": "Calculate additional accrued LENDt for a contributor since last accrual"
				}
			}
		}
	},
	"settings": {
		"compilationTarget": {
			"Tentroller.sol": "TENTroller"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Tentroller.sol": {
			"keccak256": "0x2554e743ce637ede27d2bf18cf1d7f30f6aefe636b9fca167ba22abc0a5cfae9",
			"urls": [
				"bzz-raw://96eeccce34749c0efce5d43df11a88eb922fa1b7fd620cf51614152823ab4f2d",
				"dweb:/ipfs/QmVTsfkGXeZ7Doe5oagz9LefioKJij9LPzK6Q3sEZNvNbR"
			]
		}
	},
	"version": 1
}